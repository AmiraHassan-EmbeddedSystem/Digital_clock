

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 29 05:54:49 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19   000000                     
    20                           ; Generated 17/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4620 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   0014C2                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _lat_registers
    60   0014C2  89                 	db	137
    61   0014C3  0F                 	db	15
    62   0014C4  8A                 	db	138
    63   0014C5  0F                 	db	15
    64   0014C6  8B                 	db	139
    65   0014C7  0F                 	db	15
    66   0014C8  8C                 	db	140
    67   0014C9  0F                 	db	15
    68   0014CA  8D                 	db	141
    69   0014CB  0F                 	db	15
    70                           
    71                           ;initializer for _port_registers
    72   0014CC  80                 	db	128
    73   0014CD  0F                 	db	15
    74   0014CE  81                 	db	129
    75   0014CF  0F                 	db	15
    76   0014D0  82                 	db	130
    77   0014D1  0F                 	db	15
    78   0014D2  83                 	db	131
    79   0014D3  0F                 	db	15
    80   0014D4  84                 	db	132
    81   0014D5  0F                 	db	15
    82                           
    83                           ;initializer for _tris_registers
    84   0014D6  92                 	db	146
    85   0014D7  0F                 	db	15
    86   0014D8  93                 	db	147
    87   0014D9  0F                 	db	15
    88   0014DA  94                 	db	148
    89   0014DB  0F                 	db	15
    90   0014DC  95                 	db	149
    91   0014DD  0F                 	db	15
    92   0014DE  96                 	db	150
    93   0014DF  0F                 	db	15
    94   000000                     _LATA	set	3977
    95   000000                     _PORTE	set	3972
    96   000000                     _PORTD	set	3971
    97   000000                     _PORTC	set	3970
    98   000000                     _PORTB	set	3969
    99   000000                     _PORTA	set	3968
   100   000000                     _TRISA	set	3986
   101   000000                     _TRISE	set	3990
   102   000000                     _TRISD	set	3989
   103   000000                     _TRISC	set	3988
   104   000000                     _TRISB	set	3987
   105   000000                     _LATE	set	3981
   106   000000                     _LATD	set	3980
   107   000000                     _LATC	set	3979
   108   000000                     _LATB	set	3978
   109                           
   110                           ; #config settings
   111                           
   112                           	psect	cinit
   113   001442                     __pcinit:
   114                           	callstack 0
   115   001442                     start_initialization:
   116                           	callstack 0
   117   001442                     __initialization:
   118                           	callstack 0
   119                           
   120                           ; Initialize objects allocated to COMRAM (30 bytes)
   121                           ; load TBLPTR registers with __pidataCOMRAM
   122   001442  0EC2               	movlw	low __pidataCOMRAM
   123   001444  6EF6               	movwf	tblptrl,c
   124   001446  0E14               	movlw	high __pidataCOMRAM
   125   001448  6EF7               	movwf	tblptrh,c
   126   00144A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   127   00144C  6EF8               	movwf	tblptru,c
   128   00144E  EE00  F001         	lfsr	0,__pdataCOMRAM
   129   001452  EE10 F01E          	lfsr	1,30
   130   001456                     copy_data0:
   131   001456  0009               	tblrd		*+
   132   001458  CFF5 FFEE          	movff	tablat,postinc0
   133   00145C  50E5               	movf	postdec1,w,c
   134   00145E  50E1               	movf	fsr1l,w,c
   135   001460  E1FA               	bnz	copy_data0
   136                           
   137                           ; Clear objects allocated to COMRAM (4 bytes)
   138   001462  6A2F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   139   001464  6A2E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   140   001466  6A2D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   141   001468  6A2C               	clrf	__pbssCOMRAM& (0+255),c
   142   00146A                     end_of_initialization:
   143                           	callstack 0
   144   00146A                     __end_of__initialization:
   145                           	callstack 0
   146   00146A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   147   00146C  6EF8               	movwf	tblptru,c
   148   00146E  0100               	movlb	0
   149   001470  EF01  F008         	goto	_main	;jump to C main() function
   150                           
   151                           	psect	bssCOMRAM
   152   00002C                     __pbssCOMRAM:
   153                           	callstack 0
   154   00002C                     _counter:
   155                           	callstack 0
   156   00002C                     	ds	1
   157   00002D                     _seconds:
   158                           	callstack 0
   159   00002D                     	ds	1
   160   00002E                     _minutes:
   161                           	callstack 0
   162   00002E                     	ds	1
   163   00002F                     _hours:
   164                           	callstack 0
   165   00002F                     	ds	1
   166                           
   167                           	psect	dataCOMRAM
   168   000001                     __pdataCOMRAM:
   169                           	callstack 0
   170   000001                     _lat_registers:
   171                           	callstack 0
   172   000001                     	ds	10
   173   00000B                     _port_registers:
   174                           	callstack 0
   175   00000B                     	ds	10
   176   000015                     _tris_registers:
   177                           	callstack 0
   178   000015                     	ds	10
   179                           
   180                           	psect	cstackCOMRAM
   181   00001F                     __pcstackCOMRAM:
   182                           	callstack 0
   183   00001F                     ?___awdiv:
   184                           	callstack 0
   185   00001F                     ?___awmod:
   186                           	callstack 0
   187   00001F                     gpio_port_direction_initialize@direction:
   188                           	callstack 0
   189   00001F                     ___awdiv@dividend:
   190                           	callstack 0
   191   00001F                     ___awmod@dividend:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x0
   195   00001F                     	ds	1
   196   000020                     ??_gpio_port_direction_initialize:
   197                           
   198                           ; 1 bytes @ 0x1
   199   000020                     	ds	1
   200   000021                     ___awdiv@divisor:
   201                           	callstack 0
   202   000021                     ___awmod@divisor:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x2
   206   000021                     	ds	1
   207   000022                     gpio_port_direction_initialize@port:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x3
   211   000022                     	ds	1
   212   000023                     ___awdiv@counter:
   213                           	callstack 0
   214   000023                     ___awmod@counter:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x4
   218   000023                     	ds	1
   219   000024                     ___awdiv@sign:
   220                           	callstack 0
   221   000024                     ___awmod@sign:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x5
   225   000024                     	ds	1
   226   000025                     ___awdiv@quotient:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x6
   230   000025                     	ds	2
   231   000027                     gpio_port_write_logic@logic:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x8
   235   000027                     	ds	1
   236   000028                     ??_gpio_port_write_logic:
   237                           
   238                           ; 1 bytes @ 0x9
   239   000028                     	ds	2
   240   00002A                     gpio_port_write_logic@port:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0xB
   244   00002A                     	ds	1
   245   00002B                     ??_main:
   246                           
   247                           ; 1 bytes @ 0xC
   248   00002B                     	ds	1
   249                           
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 20 in file "project.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;Total ram usage:        1 bytes
   274 ;; Hardware stack levels required when called: 2
   275 ;; This function calls:
   276 ;;		___awdiv
   277 ;;		___awmod
   278 ;;		_gpio_port_write_logic
   279 ;;		_initialization
   280 ;; This function is called by:
   281 ;;		Startup code after reset
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text0
   286   001002                     __ptext0:
   287                           	callstack 0
   288   001002                     _main:
   289                           	callstack 29
   290   001002                     
   291                           ;project.c: 22:     initialization();
   292   001002  EC3A  F00A         	call	_initialization	;wreg free
   293   001006                     
   294                           ;project.c: 23:     for(hours = 0; hours<24; hours++){
   295   001006  0E00               	movlw	0
   296   001008  6E2F               	movwf	_hours^0,c
   297   00100A                     l1277:
   298                           
   299                           ;project.c: 24:         for(minutes = 0; minutes<60; minutes++){
   300   00100A  0E00               	movlw	0
   301   00100C  6E2E               	movwf	_minutes^0,c
   302   00100E                     l1283:
   303                           
   304                           ;project.c: 25:             for(seconds = 0; seconds<60; seconds++){
   305   00100E  0E00               	movlw	0
   306   001010  6E2D               	movwf	_seconds^0,c
   307   001012                     l1289:
   308                           
   309                           ;project.c: 26:                 for (counter = 0; counter < 25; counter++) {
   310   001012  0E00               	movlw	0
   311   001014  6E2C               	movwf	_counter^0,c
   312   001016                     l1295:
   313                           
   314                           ;project.c: 28:                     gpio_port_write_logic(GPIO_PORTD, 0x3E);
   315   001016  0E3E               	movlw	62
   316   001018  6E27               	movwf	gpio_port_write_logic@logic^0,c
   317   00101A  0E03               	movlw	3
   318   00101C  EC05  F00A         	call	_gpio_port_write_logic
   319   001020                     
   320                           ;project.c: 29:                     if( ((uint8)(hours / 10)) == 0 ){
   321   001020  C02F  F01F         	movff	_hours,___awdiv@dividend
   322   001024  6A20               	clrf	(___awdiv@dividend+1)^0,c
   323   001026  0E00               	movlw	0
   324   001028  6E22               	movwf	(___awdiv@divisor+1)^0,c
   325   00102A  0E0A               	movlw	10
   326   00102C  6E21               	movwf	___awdiv@divisor^0,c
   327   00102E  EC4B  F009         	call	___awdiv	;wreg free
   328   001032  661F               	tstfsz	?___awdiv^0,c
   329   001034  EF23  F008         	goto	l1301
   330   001038                     
   331                           ;project.c: 30:                         gpio_port_write_logic(GPIO_PORTC, 0xC0);
   332   001038  0EC0               	movlw	192
   333   00103A  6E27               	movwf	gpio_port_write_logic@logic^0,c
   334   00103C  0E02               	movlw	2
   335   00103E  EC05  F00A         	call	_gpio_port_write_logic
   336                           
   337                           ;project.c: 31:                     }
   338   001042  EF31  F008         	goto	l1303
   339   001046                     l1301:
   340                           
   341                           ;project.c: 33:                     gpio_port_write_logic(GPIO_PORTC, (uint8)(hours / 10
      +                          ));
   342   001046  C02F  F01F         	movff	_hours,___awdiv@dividend
   343   00104A  6A20               	clrf	(___awdiv@dividend+1)^0,c
   344   00104C  0E00               	movlw	0
   345   00104E  6E22               	movwf	(___awdiv@divisor+1)^0,c
   346   001050  0E0A               	movlw	10
   347   001052  6E21               	movwf	___awdiv@divisor^0,c
   348   001054  EC4B  F009         	call	___awdiv	;wreg free
   349   001058  501F               	movf	?___awdiv^0,w,c
   350   00105A  6E27               	movwf	gpio_port_write_logic@logic^0,c
   351   00105C  0E02               	movlw	2
   352   00105E  EC05  F00A         	call	_gpio_port_write_logic
   353   001062                     l1303:
   354                           
   355                           ;project.c: 35:                     _delay((unsigned long)((750)*(80000000UL/4000000.0))
      +                          );
   356   001062  0E14               	movlw	20
   357   001064  6E2B               	movwf	??_main^0,c
   358   001066  0E7A               	movlw	122
   359   001068                     u777:
   360   001068  2EE8               	decfsz	wreg,f,c
   361   00106A  D7FE               	bra	u777
   362   00106C  2E2B               	decfsz	??_main^0,f,c
   363   00106E  D7FC               	bra	u777
   364   001070                     
   365                           ;project.c: 38:                     gpio_port_write_logic(GPIO_PORTD, 0x3D);
   366   001070  0E3D               	movlw	61
   367   001072  6E27               	movwf	gpio_port_write_logic@logic^0,c
   368   001074  0E03               	movlw	3
   369   001076  EC05  F00A         	call	_gpio_port_write_logic
   370   00107A                     
   371                           ;project.c: 39:                     if( ((uint8)(hours % 10)) == 0 ){
   372   00107A  C02F  F01F         	movff	_hours,___awmod@dividend
   373   00107E  6A20               	clrf	(___awmod@dividend+1)^0,c
   374   001080  0E00               	movlw	0
   375   001082  6E22               	movwf	(___awmod@divisor+1)^0,c
   376   001084  0E0A               	movlw	10
   377   001086  6E21               	movwf	___awmod@divisor^0,c
   378   001088  ECAD  F009         	call	___awmod	;wreg free
   379   00108C  661F               	tstfsz	?___awmod^0,c
   380   00108E  EF50  F008         	goto	l1311
   381   001092                     
   382                           ;project.c: 40:                         gpio_port_write_logic(GPIO_PORTC, 0xC0);
   383   001092  0EC0               	movlw	192
   384   001094  6E27               	movwf	gpio_port_write_logic@logic^0,c
   385   001096  0E02               	movlw	2
   386   001098  EC05  F00A         	call	_gpio_port_write_logic
   387                           
   388                           ;project.c: 41:                     }
   389   00109C  EF5E  F008         	goto	l1313
   390   0010A0                     l1311:
   391                           
   392                           ;project.c: 43:                     gpio_port_write_logic(GPIO_PORTC, (uint8)(hours % 10
      +                          ));
   393   0010A0  C02F  F01F         	movff	_hours,___awmod@dividend
   394   0010A4  6A20               	clrf	(___awmod@dividend+1)^0,c
   395   0010A6  0E00               	movlw	0
   396   0010A8  6E22               	movwf	(___awmod@divisor+1)^0,c
   397   0010AA  0E0A               	movlw	10
   398   0010AC  6E21               	movwf	___awmod@divisor^0,c
   399   0010AE  ECAD  F009         	call	___awmod	;wreg free
   400   0010B2  501F               	movf	?___awmod^0,w,c
   401   0010B4  6E27               	movwf	gpio_port_write_logic@logic^0,c
   402   0010B6  0E02               	movlw	2
   403   0010B8  EC05  F00A         	call	_gpio_port_write_logic
   404   0010BC                     l1313:
   405                           
   406                           ;project.c: 45:                     _delay((unsigned long)((750)*(80000000UL/4000000.0))
      +                          );
   407   0010BC  0E14               	movlw	20
   408   0010BE  6E2B               	movwf	??_main^0,c
   409   0010C0  0E7A               	movlw	122
   410   0010C2                     u787:
   411   0010C2  2EE8               	decfsz	wreg,f,c
   412   0010C4  D7FE               	bra	u787
   413   0010C6  2E2B               	decfsz	??_main^0,f,c
   414   0010C8  D7FC               	bra	u787
   415   0010CA                     
   416                           ;project.c: 48:                     gpio_port_write_logic(GPIO_PORTD, 0x3B);
   417   0010CA  0E3B               	movlw	59
   418   0010CC  6E27               	movwf	gpio_port_write_logic@logic^0,c
   419   0010CE  0E03               	movlw	3
   420   0010D0  EC05  F00A         	call	_gpio_port_write_logic
   421   0010D4                     
   422                           ;project.c: 49:                     if( ((uint8)(minutes / 10)) == 0 ){
   423   0010D4  C02E  F01F         	movff	_minutes,___awdiv@dividend
   424   0010D8  6A20               	clrf	(___awdiv@dividend+1)^0,c
   425   0010DA  0E00               	movlw	0
   426   0010DC  6E22               	movwf	(___awdiv@divisor+1)^0,c
   427   0010DE  0E0A               	movlw	10
   428   0010E0  6E21               	movwf	___awdiv@divisor^0,c
   429   0010E2  EC4B  F009         	call	___awdiv	;wreg free
   430   0010E6  661F               	tstfsz	?___awdiv^0,c
   431   0010E8  EF7D  F008         	goto	l1321
   432   0010EC                     
   433                           ;project.c: 50:                         gpio_port_write_logic(GPIO_PORTC, 0xC0);
   434   0010EC  0EC0               	movlw	192
   435   0010EE  6E27               	movwf	gpio_port_write_logic@logic^0,c
   436   0010F0  0E02               	movlw	2
   437   0010F2  EC05  F00A         	call	_gpio_port_write_logic
   438                           
   439                           ;project.c: 51:                     }
   440   0010F6  EF8B  F008         	goto	l1323
   441   0010FA                     l1321:
   442                           
   443                           ;project.c: 53:                     gpio_port_write_logic(GPIO_PORTC, (uint8)(minutes / 
      +                          10));
   444   0010FA  C02E  F01F         	movff	_minutes,___awdiv@dividend
   445   0010FE  6A20               	clrf	(___awdiv@dividend+1)^0,c
   446   001100  0E00               	movlw	0
   447   001102  6E22               	movwf	(___awdiv@divisor+1)^0,c
   448   001104  0E0A               	movlw	10
   449   001106  6E21               	movwf	___awdiv@divisor^0,c
   450   001108  EC4B  F009         	call	___awdiv	;wreg free
   451   00110C  501F               	movf	?___awdiv^0,w,c
   452   00110E  6E27               	movwf	gpio_port_write_logic@logic^0,c
   453   001110  0E02               	movlw	2
   454   001112  EC05  F00A         	call	_gpio_port_write_logic
   455   001116                     l1323:
   456                           
   457                           ;project.c: 56:                     _delay((unsigned long)((750)*(80000000UL/4000000.0))
      +                          );
   458   001116  0E14               	movlw	20
   459   001118  6E2B               	movwf	??_main^0,c
   460   00111A  0E7A               	movlw	122
   461   00111C                     u797:
   462   00111C  2EE8               	decfsz	wreg,f,c
   463   00111E  D7FE               	bra	u797
   464   001120  2E2B               	decfsz	??_main^0,f,c
   465   001122  D7FC               	bra	u797
   466   001124                     
   467                           ;project.c: 58:                     gpio_port_write_logic(GPIO_PORTD, 0x37);
   468   001124  0E37               	movlw	55
   469   001126  6E27               	movwf	gpio_port_write_logic@logic^0,c
   470   001128  0E03               	movlw	3
   471   00112A  EC05  F00A         	call	_gpio_port_write_logic
   472   00112E                     
   473                           ;project.c: 59:                     if( ((uint8)(minutes % 10)) == 0 ){
   474   00112E  C02E  F01F         	movff	_minutes,___awmod@dividend
   475   001132  6A20               	clrf	(___awmod@dividend+1)^0,c
   476   001134  0E00               	movlw	0
   477   001136  6E22               	movwf	(___awmod@divisor+1)^0,c
   478   001138  0E0A               	movlw	10
   479   00113A  6E21               	movwf	___awmod@divisor^0,c
   480   00113C  ECAD  F009         	call	___awmod	;wreg free
   481   001140  661F               	tstfsz	?___awmod^0,c
   482   001142  EFAA  F008         	goto	l1331
   483   001146                     
   484                           ;project.c: 60:                         gpio_port_write_logic(GPIO_PORTC, 0xC0);
   485   001146  0EC0               	movlw	192
   486   001148  6E27               	movwf	gpio_port_write_logic@logic^0,c
   487   00114A  0E02               	movlw	2
   488   00114C  EC05  F00A         	call	_gpio_port_write_logic
   489                           
   490                           ;project.c: 61:                     }
   491   001150  EFB8  F008         	goto	l1333
   492   001154                     l1331:
   493                           
   494                           ;project.c: 63:                     gpio_port_write_logic(GPIO_PORTC, (uint8)(minutes % 
      +                          10));
   495   001154  C02E  F01F         	movff	_minutes,___awmod@dividend
   496   001158  6A20               	clrf	(___awmod@dividend+1)^0,c
   497   00115A  0E00               	movlw	0
   498   00115C  6E22               	movwf	(___awmod@divisor+1)^0,c
   499   00115E  0E0A               	movlw	10
   500   001160  6E21               	movwf	___awmod@divisor^0,c
   501   001162  ECAD  F009         	call	___awmod	;wreg free
   502   001166  501F               	movf	?___awmod^0,w,c
   503   001168  6E27               	movwf	gpio_port_write_logic@logic^0,c
   504   00116A  0E02               	movlw	2
   505   00116C  EC05  F00A         	call	_gpio_port_write_logic
   506   001170                     l1333:
   507                           
   508                           ;project.c: 66:                     _delay((unsigned long)((750)*(80000000UL/4000000.0))
      +                          );
   509   001170  0E14               	movlw	20
   510   001172  6E2B               	movwf	??_main^0,c
   511   001174  0E7A               	movlw	122
   512   001176                     u807:
   513   001176  2EE8               	decfsz	wreg,f,c
   514   001178  D7FE               	bra	u807
   515   00117A  2E2B               	decfsz	??_main^0,f,c
   516   00117C  D7FC               	bra	u807
   517   00117E                     
   518                           ;project.c: 68:                     gpio_port_write_logic(GPIO_PORTD, 0x2F);
   519   00117E  0E2F               	movlw	47
   520   001180  6E27               	movwf	gpio_port_write_logic@logic^0,c
   521   001182  0E03               	movlw	3
   522   001184  EC05  F00A         	call	_gpio_port_write_logic
   523   001188                     
   524                           ;project.c: 69:                     if( ((uint8)seconds / 10) == 0 ){
   525   001188  C02D  F01F         	movff	_seconds,___awdiv@dividend
   526   00118C  6A20               	clrf	(___awdiv@dividend+1)^0,c
   527   00118E  0E00               	movlw	0
   528   001190  6E22               	movwf	(___awdiv@divisor+1)^0,c
   529   001192  0E0A               	movlw	10
   530   001194  6E21               	movwf	___awdiv@divisor^0,c
   531   001196  EC4B  F009         	call	___awdiv	;wreg free
   532   00119A  501F               	movf	?___awdiv^0,w,c
   533   00119C  1020               	iorwf	(?___awdiv+1)^0,w,c
   534   00119E  A4D8               	btfss	status,2,c
   535   0011A0  EFD4  F008         	goto	u711
   536   0011A4  EFD6  F008         	goto	u710
   537   0011A8                     u711:
   538   0011A8  EFDD  F008         	goto	l1341
   539   0011AC                     u710:
   540   0011AC                     
   541                           ;project.c: 70:                         gpio_port_write_logic(GPIO_PORTC, 0xC0);
   542   0011AC  0EC0               	movlw	192
   543   0011AE  6E27               	movwf	gpio_port_write_logic@logic^0,c
   544   0011B0  0E02               	movlw	2
   545   0011B2  EC05  F00A         	call	_gpio_port_write_logic
   546                           
   547                           ;project.c: 71:                     }
   548   0011B6  EFEB  F008         	goto	l1343
   549   0011BA                     l1341:
   550                           
   551                           ;project.c: 73:                         gpio_port_write_logic(GPIO_PORTC, (uint8)(second
      +                          s / 10));
   552   0011BA  C02D  F01F         	movff	_seconds,___awdiv@dividend
   553   0011BE  6A20               	clrf	(___awdiv@dividend+1)^0,c
   554   0011C0  0E00               	movlw	0
   555   0011C2  6E22               	movwf	(___awdiv@divisor+1)^0,c
   556   0011C4  0E0A               	movlw	10
   557   0011C6  6E21               	movwf	___awdiv@divisor^0,c
   558   0011C8  EC4B  F009         	call	___awdiv	;wreg free
   559   0011CC  501F               	movf	?___awdiv^0,w,c
   560   0011CE  6E27               	movwf	gpio_port_write_logic@logic^0,c
   561   0011D0  0E02               	movlw	2
   562   0011D2  EC05  F00A         	call	_gpio_port_write_logic
   563   0011D6                     l1343:
   564                           
   565                           ;project.c: 75:                     _delay((unsigned long)((750)*(80000000UL/4000000.0))
      +                          );
   566   0011D6  0E14               	movlw	20
   567   0011D8  6E2B               	movwf	??_main^0,c
   568   0011DA  0E7A               	movlw	122
   569   0011DC                     u817:
   570   0011DC  2EE8               	decfsz	wreg,f,c
   571   0011DE  D7FE               	bra	u817
   572   0011E0  2E2B               	decfsz	??_main^0,f,c
   573   0011E2  D7FC               	bra	u817
   574   0011E4                     
   575                           ;project.c: 78:                     gpio_port_write_logic(GPIO_PORTD, 0x1F);
   576   0011E4  0E1F               	movlw	31
   577   0011E6  6E27               	movwf	gpio_port_write_logic@logic^0,c
   578   0011E8  0E03               	movlw	3
   579   0011EA  EC05  F00A         	call	_gpio_port_write_logic
   580   0011EE                     
   581                           ;project.c: 79:                     if( ((uint8)seconds % 10) == 0 ){
   582   0011EE  C02D  F01F         	movff	_seconds,___awmod@dividend
   583   0011F2  6A20               	clrf	(___awmod@dividend+1)^0,c
   584   0011F4  0E00               	movlw	0
   585   0011F6  6E22               	movwf	(___awmod@divisor+1)^0,c
   586   0011F8  0E0A               	movlw	10
   587   0011FA  6E21               	movwf	___awmod@divisor^0,c
   588   0011FC  ECAD  F009         	call	___awmod	;wreg free
   589   001200  501F               	movf	?___awmod^0,w,c
   590   001202  1020               	iorwf	(?___awmod+1)^0,w,c
   591   001204  A4D8               	btfss	status,2,c
   592   001206  EF07  F009         	goto	u721
   593   00120A  EF09  F009         	goto	u720
   594   00120E                     u721:
   595   00120E  EF10  F009         	goto	l1351
   596   001212                     u720:
   597   001212                     
   598                           ;project.c: 80:                         gpio_port_write_logic(GPIO_PORTC, 0xC0);
   599   001212  0EC0               	movlw	192
   600   001214  6E27               	movwf	gpio_port_write_logic@logic^0,c
   601   001216  0E02               	movlw	2
   602   001218  EC05  F00A         	call	_gpio_port_write_logic
   603                           
   604                           ;project.c: 81:                     }
   605   00121C  EF1E  F009         	goto	l1353
   606   001220                     l1351:
   607                           
   608                           ;project.c: 83:                         gpio_port_write_logic(GPIO_PORTC, (uint8)(second
      +                          s % 10));
   609   001220  C02D  F01F         	movff	_seconds,___awmod@dividend
   610   001224  6A20               	clrf	(___awmod@dividend+1)^0,c
   611   001226  0E00               	movlw	0
   612   001228  6E22               	movwf	(___awmod@divisor+1)^0,c
   613   00122A  0E0A               	movlw	10
   614   00122C  6E21               	movwf	___awmod@divisor^0,c
   615   00122E  ECAD  F009         	call	___awmod	;wreg free
   616   001232  501F               	movf	?___awmod^0,w,c
   617   001234  6E27               	movwf	gpio_port_write_logic@logic^0,c
   618   001236  0E02               	movlw	2
   619   001238  EC05  F00A         	call	_gpio_port_write_logic
   620   00123C                     l1353:
   621                           
   622                           ;project.c: 85:                     _delay((unsigned long)((750)*(80000000UL/4000000.0))
      +                          );
   623   00123C  0E14               	movlw	20
   624   00123E  6E2B               	movwf	??_main^0,c
   625   001240  0E7A               	movlw	122
   626   001242                     u827:
   627   001242  2EE8               	decfsz	wreg,f,c
   628   001244  D7FE               	bra	u827
   629   001246  2E2B               	decfsz	??_main^0,f,c
   630   001248  D7FC               	bra	u827
   631   00124A                     
   632                           ;project.c: 86:                 }
   633   00124A  2A2C               	incf	_counter^0,f,c
   634   00124C  0E18               	movlw	24
   635   00124E  642C               	cpfsgt	_counter^0,c
   636   001250  EF2C  F009         	goto	u731
   637   001254  EF2E  F009         	goto	u730
   638   001258                     u731:
   639   001258  EF0B  F008         	goto	l1295
   640   00125C                     u730:
   641   00125C                     
   642                           ;project.c: 87:             }
   643   00125C  2A2D               	incf	_seconds^0,f,c
   644   00125E  0E3B               	movlw	59
   645   001260  642D               	cpfsgt	_seconds^0,c
   646   001262  EF35  F009         	goto	u741
   647   001266  EF37  F009         	goto	u740
   648   00126A                     u741:
   649   00126A  EF09  F008         	goto	l1289
   650   00126E                     u740:
   651   00126E                     
   652                           ;project.c: 88:         }
   653   00126E  2A2E               	incf	_minutes^0,f,c
   654   001270  0E3B               	movlw	59
   655   001272  642E               	cpfsgt	_minutes^0,c
   656   001274  EF3E  F009         	goto	u751
   657   001278  EF40  F009         	goto	u750
   658   00127C                     u751:
   659   00127C  EF07  F008         	goto	l1283
   660   001280                     u750:
   661   001280                     
   662                           ;project.c: 89:     }
   663   001280  2A2F               	incf	_hours^0,f,c
   664   001282  0E17               	movlw	23
   665   001284  642F               	cpfsgt	_hours^0,c
   666   001286  EF47  F009         	goto	u761
   667   00128A  EF49  F009         	goto	u760
   668   00128E                     u761:
   669   00128E  EF05  F008         	goto	l1277
   670   001292                     u760:
   671   001292  EF00  F000         	goto	start
   672   001296                     __end_of_main:
   673                           	callstack 0
   674                           
   675 ;; *************** function _initialization *****************
   676 ;; Defined at:
   677 ;;		line 94 in file "project.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;Total ram usage:        0 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 1
   698 ;; This function calls:
   699 ;;		_gpio_port_direction_initialize
   700 ;;		_gpio_port_write_logic
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text1
   707   001474                     __ptext1:
   708                           	callstack 0
   709   001474                     _initialization:
   710                           	callstack 29
   711   001474                     
   712                           ;project.c: 95:     gpio_port_direction_initialize(GPIO_PORTC, 0x00);
   713   001474  0E00               	movlw	0
   714   001476  6E1F               	movwf	gpio_port_direction_initialize@direction^0,c
   715   001478  0E02               	movlw	2
   716   00147A  EC4F  F00A         	call	_gpio_port_direction_initialize
   717                           
   718                           ;project.c: 96:     gpio_port_direction_initialize(GPIO_PORTD, 0x00);
   719   00147E  0E00               	movlw	0
   720   001480  6E1F               	movwf	gpio_port_direction_initialize@direction^0,c
   721   001482  0E03               	movlw	3
   722   001484  EC4F  F00A         	call	_gpio_port_direction_initialize
   723                           
   724                           ;project.c: 99:     gpio_port_write_logic(GPIO_PORTC, 0x00);
   725   001488  0E00               	movlw	0
   726   00148A  6E27               	movwf	gpio_port_write_logic@logic^0,c
   727   00148C  0E02               	movlw	2
   728   00148E  EC05  F00A         	call	_gpio_port_write_logic
   729                           
   730                           ;project.c: 100:     gpio_port_write_logic(GPIO_PORTD, 0x00);
   731   001492  0E00               	movlw	0
   732   001494  6E27               	movwf	gpio_port_write_logic@logic^0,c
   733   001496  0E03               	movlw	3
   734   001498  EC05  F00A         	call	_gpio_port_write_logic
   735   00149C  0012               	return		;funcret
   736   00149E                     __end_of_initialization:
   737                           	callstack 0
   738                           
   739 ;; *************** function _gpio_port_write_logic *****************
   740 ;; Defined at:
   741 ;;		line 152 in file "MCAL/GPIO/hal_gpio.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  port            1    wreg     enum E2493
   744 ;;  logic           1    8[COMRAM] unsigned char 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  port            1   11[COMRAM] enum E2493
   747 ;;  ret             1    0        unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      unsigned char 
   750 ;; Registers used:
   751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   757 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;Total ram usage:        4 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;;		_initialization
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text2
   772   00140A                     __ptext2:
   773                           	callstack 0
   774   00140A                     _gpio_port_write_logic:
   775                           	callstack 29
   776                           
   777                           ;incstack = 0
   778                           ;gpio_port_write_logic@port stored from wreg
   779   00140A  6E2A               	movwf	gpio_port_write_logic@port^0,c
   780   00140C                     
   781                           ;MCAL/GPIO/hal_gpio.c: 155:     if(((void*)0) == logic){
   782   00140C  5027               	movf	gpio_port_write_logic@logic^0,w,c
   783   00140E  A4D8               	btfss	status,2,c
   784   001410  EF0C  F00A         	goto	u541
   785   001414  EF0E  F00A         	goto	u540
   786   001418                     u541:
   787   001418  EF10  F00A         	goto	l1183
   788   00141C                     u540:
   789   00141C                     
   790                           ;MCAL/GPIO/hal_gpio.c: 157:     }
   791   00141C  EF20  F00A         	goto	l106
   792   001420                     l1183:
   793                           
   794                           ;MCAL/GPIO/hal_gpio.c: 159:         *lat_registers[port] = logic;
   795   001420  502A               	movf	gpio_port_write_logic@port^0,w,c
   796   001422  0D02               	mullw	2
   797   001424  50F3               	movf	243,w,c
   798   001426  0F01               	addlw	low _lat_registers
   799   001428  6ED9               	movwf	fsr2l,c
   800   00142A  6ADA               	clrf	fsr2h,c
   801   00142C  CFDE F028          	movff	postinc2,??_gpio_port_write_logic
   802   001430  CFDD F029          	movff	postdec2,??_gpio_port_write_logic+1
   803   001434  C028  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   804   001438  C029  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   805   00143C  C027  FFDF         	movff	gpio_port_write_logic@logic,indf2
   806   001440                     l106:
   807   001440  0012               	return		;funcret
   808   001442                     __end_of_gpio_port_write_logic:
   809                           	callstack 0
   810                           
   811 ;; *************** function _gpio_port_direction_initialize *****************
   812 ;; Defined at:
   813 ;;		line 119 in file "MCAL/GPIO/hal_gpio.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  port            1    wreg     enum E2493
   816 ;;  direction       1    0[COMRAM] unsigned char 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  port            1    3[COMRAM] enum E2493
   819 ;;  ret             1    0        unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      unsigned char 
   822 ;; Registers used:
   823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   829 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;Total ram usage:        4 bytes
   834 ;; Hardware stack levels used: 1
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_initialization
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text3
   843   00149E                     __ptext3:
   844                           	callstack 0
   845   00149E                     _gpio_port_direction_initialize:
   846                           	callstack 29
   847                           
   848                           ;incstack = 0
   849                           ;gpio_port_direction_initialize@port stored from wreg
   850   00149E  6E22               	movwf	gpio_port_direction_initialize@port^0,c
   851   0014A0                     
   852                           ;MCAL/GPIO/hal_gpio.c: 122:     *tris_registers[port] = direction;
   853   0014A0  5022               	movf	gpio_port_direction_initialize@port^0,w,c
   854   0014A2  0D02               	mullw	2
   855   0014A4  50F3               	movf	243,w,c
   856   0014A6  0F15               	addlw	low _tris_registers
   857   0014A8  6ED9               	movwf	fsr2l,c
   858   0014AA  6ADA               	clrf	fsr2h,c
   859   0014AC  CFDE F020          	movff	postinc2,??_gpio_port_direction_initialize
   860   0014B0  CFDD F021          	movff	postdec2,??_gpio_port_direction_initialize+1
   861   0014B4  C020  FFD9         	movff	??_gpio_port_direction_initialize,fsr2l
   862   0014B8  C021  FFDA         	movff	??_gpio_port_direction_initialize+1,fsr2h
   863   0014BC  C01F  FFDF         	movff	gpio_port_direction_initialize@direction,indf2
   864   0014C0  0012               	return		;funcret
   865   0014C2                     __end_of_gpio_port_direction_initialize:
   866                           	callstack 0
   867                           
   868 ;; *************** function ___awmod *****************
   869 ;; Defined at:
   870 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  dividend        2    0[COMRAM] int 
   873 ;;  divisor         2    2[COMRAM] int 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  sign            1    5[COMRAM] unsigned char 
   876 ;;  counter         1    4[COMRAM] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  2    0[COMRAM] int 
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;Total ram usage:        6 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text4
   900   00135A                     __ptext4:
   901                           	callstack 0
   902   00135A                     ___awmod:
   903                           	callstack 30
   904   00135A  0E00               	movlw	0
   905   00135C  6E24               	movwf	___awmod@sign^0,c
   906   00135E  BE20               	btfsc	(___awmod@dividend+1)^0,7,c
   907   001360  EFB6  F009         	goto	u610
   908   001364  EFB4  F009         	goto	u611
   909   001368                     u611:
   910   001368  EFBC  F009         	goto	l1241
   911   00136C                     u610:
   912   00136C  6C1F               	negf	___awmod@dividend^0,c
   913   00136E  1E20               	comf	(___awmod@dividend+1)^0,f,c
   914   001370  B0D8               	btfsc	status,0,c
   915   001372  2A20               	incf	(___awmod@dividend+1)^0,f,c
   916   001374  0E01               	movlw	1
   917   001376  6E24               	movwf	___awmod@sign^0,c
   918   001378                     l1241:
   919   001378  BE22               	btfsc	(___awmod@divisor+1)^0,7,c
   920   00137A  EFC3  F009         	goto	u620
   921   00137E  EFC1  F009         	goto	u621
   922   001382                     u621:
   923   001382  EFC7  F009         	goto	l1245
   924   001386                     u620:
   925   001386  6C21               	negf	___awmod@divisor^0,c
   926   001388  1E22               	comf	(___awmod@divisor+1)^0,f,c
   927   00138A  B0D8               	btfsc	status,0,c
   928   00138C  2A22               	incf	(___awmod@divisor+1)^0,f,c
   929   00138E                     l1245:
   930   00138E  5021               	movf	___awmod@divisor^0,w,c
   931   001390  1022               	iorwf	(___awmod@divisor+1)^0,w,c
   932   001392  B4D8               	btfsc	status,2,c
   933   001394  EFCE  F009         	goto	u631
   934   001398  EFD0  F009         	goto	u630
   935   00139C                     u631:
   936   00139C  EFF4  F009         	goto	l1261
   937   0013A0                     u630:
   938   0013A0  0E01               	movlw	1
   939   0013A2  6E23               	movwf	___awmod@counter^0,c
   940   0013A4  EFD8  F009         	goto	l1251
   941   0013A8                     l1249:
   942   0013A8  90D8               	bcf	status,0,c
   943   0013AA  3621               	rlcf	___awmod@divisor^0,f,c
   944   0013AC  3622               	rlcf	(___awmod@divisor+1)^0,f,c
   945   0013AE  2A23               	incf	___awmod@counter^0,f,c
   946   0013B0                     l1251:
   947   0013B0  AE22               	btfss	(___awmod@divisor+1)^0,7,c
   948   0013B2  EFDD  F009         	goto	u641
   949   0013B6  EFDF  F009         	goto	u640
   950   0013BA                     u641:
   951   0013BA  EFD4  F009         	goto	l1249
   952   0013BE                     u640:
   953   0013BE                     l1253:
   954   0013BE  5021               	movf	___awmod@divisor^0,w,c
   955   0013C0  5C1F               	subwf	___awmod@dividend^0,w,c
   956   0013C2  5022               	movf	(___awmod@divisor+1)^0,w,c
   957   0013C4  5820               	subwfb	(___awmod@dividend+1)^0,w,c
   958   0013C6  A0D8               	btfss	status,0,c
   959   0013C8  EFE8  F009         	goto	u651
   960   0013CC  EFEA  F009         	goto	u650
   961   0013D0                     u651:
   962   0013D0  EFEE  F009         	goto	l1257
   963   0013D4                     u650:
   964   0013D4  5021               	movf	___awmod@divisor^0,w,c
   965   0013D6  5E1F               	subwf	___awmod@dividend^0,f,c
   966   0013D8  5022               	movf	(___awmod@divisor+1)^0,w,c
   967   0013DA  5A20               	subwfb	(___awmod@dividend+1)^0,f,c
   968   0013DC                     l1257:
   969   0013DC  90D8               	bcf	status,0,c
   970   0013DE  3222               	rrcf	(___awmod@divisor+1)^0,f,c
   971   0013E0  3221               	rrcf	___awmod@divisor^0,f,c
   972   0013E2  2E23               	decfsz	___awmod@counter^0,f,c
   973   0013E4  EFDF  F009         	goto	l1253
   974   0013E8                     l1261:
   975   0013E8  5024               	movf	___awmod@sign^0,w,c
   976   0013EA  B4D8               	btfsc	status,2,c
   977   0013EC  EFFA  F009         	goto	u661
   978   0013F0  EFFC  F009         	goto	u660
   979   0013F4                     u661:
   980   0013F4  EF00  F00A         	goto	l1265
   981   0013F8                     u660:
   982   0013F8  6C1F               	negf	___awmod@dividend^0,c
   983   0013FA  1E20               	comf	(___awmod@dividend+1)^0,f,c
   984   0013FC  B0D8               	btfsc	status,0,c
   985   0013FE  2A20               	incf	(___awmod@dividend+1)^0,f,c
   986   001400                     l1265:
   987   001400  C01F  F01F         	movff	___awmod@dividend,?___awmod
   988   001404  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
   989   001408  0012               	return		;funcret
   990   00140A                     __end_of___awmod:
   991                           	callstack 0
   992                           
   993 ;; *************** function ___awdiv *****************
   994 ;; Defined at:
   995 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  dividend        2    0[COMRAM] int 
   998 ;;  divisor         2    2[COMRAM] int 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  quotient        2    6[COMRAM] int 
  1001 ;;  sign            1    5[COMRAM] unsigned char 
  1002 ;;  counter         1    4[COMRAM] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  2    0[COMRAM] int 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;Total ram usage:        8 bytes
  1017 ;; Hardware stack levels used: 1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text5
  1026   001296                     __ptext5:
  1027                           	callstack 0
  1028   001296                     ___awdiv:
  1029                           	callstack 30
  1030   001296  0E00               	movlw	0
  1031   001298  6E24               	movwf	___awdiv@sign^0,c
  1032   00129A  BE22               	btfsc	(___awdiv@divisor+1)^0,7,c
  1033   00129C  EF54  F009         	goto	u550
  1034   0012A0  EF52  F009         	goto	u551
  1035   0012A4                     u551:
  1036   0012A4  EF5A  F009         	goto	l1197
  1037   0012A8                     u550:
  1038   0012A8  6C21               	negf	___awdiv@divisor^0,c
  1039   0012AA  1E22               	comf	(___awdiv@divisor+1)^0,f,c
  1040   0012AC  B0D8               	btfsc	status,0,c
  1041   0012AE  2A22               	incf	(___awdiv@divisor+1)^0,f,c
  1042   0012B0  0E01               	movlw	1
  1043   0012B2  6E24               	movwf	___awdiv@sign^0,c
  1044   0012B4                     l1197:
  1045   0012B4  BE20               	btfsc	(___awdiv@dividend+1)^0,7,c
  1046   0012B6  EF61  F009         	goto	u560
  1047   0012BA  EF5F  F009         	goto	u561
  1048   0012BE                     u561:
  1049   0012BE  EF67  F009         	goto	l1203
  1050   0012C2                     u560:
  1051   0012C2  6C1F               	negf	___awdiv@dividend^0,c
  1052   0012C4  1E20               	comf	(___awdiv@dividend+1)^0,f,c
  1053   0012C6  B0D8               	btfsc	status,0,c
  1054   0012C8  2A20               	incf	(___awdiv@dividend+1)^0,f,c
  1055   0012CA  0E01               	movlw	1
  1056   0012CC  1A24               	xorwf	___awdiv@sign^0,f,c
  1057   0012CE                     l1203:
  1058   0012CE  0E00               	movlw	0
  1059   0012D0  6E26               	movwf	(___awdiv@quotient+1)^0,c
  1060   0012D2  0E00               	movlw	0
  1061   0012D4  6E25               	movwf	___awdiv@quotient^0,c
  1062   0012D6  5021               	movf	___awdiv@divisor^0,w,c
  1063   0012D8  1022               	iorwf	(___awdiv@divisor+1)^0,w,c
  1064   0012DA  B4D8               	btfsc	status,2,c
  1065   0012DC  EF72  F009         	goto	u571
  1066   0012E0  EF74  F009         	goto	u570
  1067   0012E4                     u571:
  1068   0012E4  EF9C  F009         	goto	l1225
  1069   0012E8                     u570:
  1070   0012E8  0E01               	movlw	1
  1071   0012EA  6E23               	movwf	___awdiv@counter^0,c
  1072   0012EC  EF7C  F009         	goto	l1211
  1073   0012F0                     l1209:
  1074   0012F0  90D8               	bcf	status,0,c
  1075   0012F2  3621               	rlcf	___awdiv@divisor^0,f,c
  1076   0012F4  3622               	rlcf	(___awdiv@divisor+1)^0,f,c
  1077   0012F6  2A23               	incf	___awdiv@counter^0,f,c
  1078   0012F8                     l1211:
  1079   0012F8  AE22               	btfss	(___awdiv@divisor+1)^0,7,c
  1080   0012FA  EF81  F009         	goto	u581
  1081   0012FE  EF83  F009         	goto	u580
  1082   001302                     u581:
  1083   001302  EF78  F009         	goto	l1209
  1084   001306                     u580:
  1085   001306                     l1213:
  1086   001306  90D8               	bcf	status,0,c
  1087   001308  3625               	rlcf	___awdiv@quotient^0,f,c
  1088   00130A  3626               	rlcf	(___awdiv@quotient+1)^0,f,c
  1089   00130C  5021               	movf	___awdiv@divisor^0,w,c
  1090   00130E  5C1F               	subwf	___awdiv@dividend^0,w,c
  1091   001310  5022               	movf	(___awdiv@divisor+1)^0,w,c
  1092   001312  5820               	subwfb	(___awdiv@dividend+1)^0,w,c
  1093   001314  A0D8               	btfss	status,0,c
  1094   001316  EF8F  F009         	goto	u591
  1095   00131A  EF91  F009         	goto	u590
  1096   00131E                     u591:
  1097   00131E  EF96  F009         	goto	l1221
  1098   001322                     u590:
  1099   001322  5021               	movf	___awdiv@divisor^0,w,c
  1100   001324  5E1F               	subwf	___awdiv@dividend^0,f,c
  1101   001326  5022               	movf	(___awdiv@divisor+1)^0,w,c
  1102   001328  5A20               	subwfb	(___awdiv@dividend+1)^0,f,c
  1103   00132A  8025               	bsf	___awdiv@quotient^0,0,c
  1104   00132C                     l1221:
  1105   00132C  90D8               	bcf	status,0,c
  1106   00132E  3222               	rrcf	(___awdiv@divisor+1)^0,f,c
  1107   001330  3221               	rrcf	___awdiv@divisor^0,f,c
  1108   001332  2E23               	decfsz	___awdiv@counter^0,f,c
  1109   001334  EF83  F009         	goto	l1213
  1110   001338                     l1225:
  1111   001338  5024               	movf	___awdiv@sign^0,w,c
  1112   00133A  B4D8               	btfsc	status,2,c
  1113   00133C  EFA2  F009         	goto	u601
  1114   001340  EFA4  F009         	goto	u600
  1115   001344                     u601:
  1116   001344  EFA8  F009         	goto	l1229
  1117   001348                     u600:
  1118   001348  6C25               	negf	___awdiv@quotient^0,c
  1119   00134A  1E26               	comf	(___awdiv@quotient+1)^0,f,c
  1120   00134C  B0D8               	btfsc	status,0,c
  1121   00134E  2A26               	incf	(___awdiv@quotient+1)^0,f,c
  1122   001350                     l1229:
  1123   001350  C025  F01F         	movff	___awdiv@quotient,?___awdiv
  1124   001354  C026  F020         	movff	___awdiv@quotient+1,?___awdiv+1
  1125   001358  0012               	return		;funcret
  1126   00135A                     __end_of___awdiv:
  1127                           	callstack 0
  1128                           
  1129                           	psect	smallconst
  1130   001000                     __psmallconst:
  1131                           	callstack 0
  1132   001000  00                 	db	0
  1133   001001  00                 	db	0	; dummy byte at the end
  1134   000000                     
  1135                           	psect	rparam
  1136   000000                     tosu	equ	0xFFF
  1137                           tosh	equ	0xFFE
  1138                           tosl	equ	0xFFD
  1139                           stkptr	equ	0xFFC
  1140                           pclatu	equ	0xFFB
  1141                           pclath	equ	0xFFA
  1142                           pcl	equ	0xFF9
  1143                           tblptru	equ	0xFF8
  1144                           tblptrh	equ	0xFF7
  1145                           tblptrl	equ	0xFF6
  1146                           tablat	equ	0xFF5
  1147                           prodh	equ	0xFF4
  1148                           prodl	equ	0xFF3
  1149                           indf0	equ	0xFEF
  1150                           postinc0	equ	0xFEE
  1151                           postdec0	equ	0xFED
  1152                           preinc0	equ	0xFEC
  1153                           plusw0	equ	0xFEB
  1154                           fsr0h	equ	0xFEA
  1155                           fsr0l	equ	0xFE9
  1156                           wreg	equ	0xFE8
  1157                           indf1	equ	0xFE7
  1158                           postinc1	equ	0xFE6
  1159                           postdec1	equ	0xFE5
  1160                           preinc1	equ	0xFE4
  1161                           plusw1	equ	0xFE3
  1162                           fsr1h	equ	0xFE2
  1163                           fsr1l	equ	0xFE1
  1164                           bsr	equ	0xFE0
  1165                           indf2	equ	0xFDF
  1166                           postinc2	equ	0xFDE
  1167                           postdec2	equ	0xFDD
  1168                           preinc2	equ	0xFDC
  1169                           plusw2	equ	0xFDB
  1170                           fsr2h	equ	0xFDA
  1171                           fsr2l	equ	0xFD9
  1172                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     13      47
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_gpio_port_write_logic
    _initialization->_gpio_port_write_logic
    _gpio_port_write_logic->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5811
                                             12 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
              _gpio_port_write_logic
                     _initialization
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0    1797
     _gpio_port_direction_initialize
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_port_write_logic                                5     4      1    1594
                                              8 COMRAM     4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _gpio_port_direction_initialize                       5     4      1     203
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _gpio_port_write_logic
     ___awdiv (ARG)
     ___awmod (ARG)
   _initialization
     _gpio_port_direction_initialize
     _gpio_port_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      D      2F       1       37.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      39        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 29 05:54:49 2024

                                     l91 14C0                             ___awdiv@sign 0024  
                                    l106 1440                                      l150 1292  
                                    l400 1408                                      l153 149C  
                                    l387 1358                                      u600 1348  
                                    u601 1344                                      u610 136C  
                                    u611 1368                                      u620 1386  
                                    u540 141C                                      u700 1146  
                                    u621 1382                                      u541 1418  
                                    u701 1142                                      u550 12A8  
                                    u630 13A0                                      u710 11AC  
                                    u551 12A4                                      u631 139C  
                                    u711 11A8                                      u560 12C2  
                                    u640 13BE                                      u720 1212  
                                    u561 12BE                                      u641 13BA  
                                    u721 120E                                      u570 12E8  
                                    u650 13D4                                      u730 125C  
                                    u571 12E4                                      u651 13D0  
                                    u731 1258                                      u580 1306  
                                    u660 13F8                                      u740 126E  
                                    u581 1302                                      u661 13F4  
                                    u741 126A                                      u590 1322  
                                    u750 1280                                      u670 1038  
                                    u591 131E                                      u751 127C  
                                    u807 1176                                      u671 1034  
                                    u760 1292                                      u680 1092  
                                    u761 128E                                      u817 11DC  
                                    u681 108E                                      u690 10EC  
                                    u827 1242                                      u691 10E8  
                                    u777 1068                                      u787 10C2  
                                    u797 111C                             ___awmod@sign 0024  
                                    wreg 0FE8                                     l1201 12CA  
                                   l1211 12F8                                     l1203 12CE  
                                   l1221 132C                                     l1213 1306  
                                   l1205 12D6                                     l1301 1046  
                                   l1223 1332                                     l1215 130C  
                                   l1207 12E8                                     l1311 10A0  
                                   l1303 1062                                     l1217 1322  
                                   l1209 12F0                                     l1225 1338  
                                   l1241 1378                                     l1233 135A  
                                   l1321 10FA                                     l1313 10BC  
                                   l1305 1070                                     l1227 1348  
                                   l1219 132A                                     l1251 13B0  
                                   l1243 1386                                     l1235 135E  
                                   l1171 14A0                                     l1331 1154  
                                   l1323 1116                                     l1315 10CA  
                                   l1307 107A                                     l1229 1350  
                                   l1253 13BE                                     l1261 13E8  
                                   l1245 138E                                     l1237 136C  
                                   l1173 14A0                                     l1181 141C  
                                   l1341 11BA                                     l1333 1170  
                                   l1325 1124                                     l1317 10D4  
                                   l1309 1092                                     l1191 129A  
                                   l1263 13F8                                     l1255 13D4  
                                   l1247 13A0                                     l1239 1374  
                                   l1183 1420                                     l1351 1220  
                                   l1343 11D6                                     l1335 117E  
                                   l1327 112E                                     l1319 10EC  
                                   l1271 1006                                     l1193 12A8  
                                   l1265 1400                                     l1257 13DC  
                                   l1249 13A8                                     l1177 140C  
                                   l1361 125E                                     l1353 123C  
                                   l1345 11E4                                     l1337 1188  
                                   l1329 1146                                     l1195 12B0  
                                   l1259 13E2                                     l1179 140C  
                                   l1187 1474                                     l1363 126E  
                                   l1355 124A                                     l1347 11EE  
                                   l1339 11AC                                     l1283 100E  
                                   l1197 12B4                                     l1189 1296  
                                   l1365 1270                                     l1357 124C  
                                   l1349 1212                                     l1277 100A  
                                   l1269 1002                                     l1199 12C2  
                                   l1367 1280                                     l1359 125C  
                                   l1295 1016                                     l1369 1282  
                                   l1297 1020                                     l1289 1012  
                                   l1299 1038                                     _LATA 0F89  
                                   _LATB 0F8A                                     _LATC 0F8B  
                                   _LATD 0F8C                                     _LATE 0F8D  
                       ??_initialization 002B                                     _main 1002  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000  
                           ___param_bank 0000                    _gpio_port_write_logic 140A  
                                  ?_main 001F                          __end_of___awdiv 135A  
                        __end_of___awmod 140A                          ___awdiv@divisor 0021  
                        ___awdiv@counter 0023                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    _hours 002F  
                                  tablat 0FF5                                    status 0FD8  
                        __initialization 1442                             __end_of_main 1296  
                          _lat_registers 0001                                   ??_main 002B  
                          __activetblptr 0002                         ___awdiv@dividend 001F  
              gpio_port_write_logic@port 002A   __end_of_gpio_port_direction_initialize 14C2  
         _gpio_port_direction_initialize 149E                   ?_gpio_port_write_logic 0027  
                              ??___awdiv 0023                                ??___awmod 0023  
                       ___awdiv@quotient 0025                          ___awmod@divisor 0021  
                                 isa$std 0001                          ___awmod@counter 0023  
                           __pdataCOMRAM 0001                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0080  
                __end_of__initialization 146A                            ___rparam_used 0001  
                         __pcstackCOMRAM 001F                           _tris_registers 0015  
                                __Hparam 0000                                  __Lparam 0000  
                                ___awdiv 1296                                  ___awmod 135A  
                           __psmallconst 1000                                  __pcinit 1442  
                                __ramtop 1000                                  __ptext0 1002  
                                __ptext1 1474                                  __ptext2 140A  
                                __ptext3 149E                                  __ptext4 135A  
                                __ptext5 1296                                  _counter 002C  
                       ___awmod@dividend 001F                                  _minutes 002E  
                                _seconds 002D                     end_of_initialization 146A  
                          __Lmediumconst 0000                  ??_gpio_port_write_logic 0028  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
gpio_port_direction_initialize@direction 001F                            __pidataCOMRAM 14C2  
                    start_initialization 1442                              __pbssCOMRAM 002C  
                               ?___awdiv 001F                                 ?___awmod 001F  
                         _initialization 1474                              __smallconst 1000  
          __end_of_gpio_port_write_logic 1442                   __end_of_initialization 149E  
                              copy_data0 1456                                 __Hrparam 0000  
                        ?_initialization 001F                                 __Lrparam 0000  
                               isa$xinst 0000         ??_gpio_port_direction_initialize 0020  
        ?_gpio_port_direction_initialize 001F       gpio_port_direction_initialize@port 0022  
                         _port_registers 000B               gpio_port_write_logic@logic 0027  
